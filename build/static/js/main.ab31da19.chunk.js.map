{"version":3,"sources":["Components/Receipe/images/Idli.jpg","Components/Receipe/images/dosa.jpg","Components/Receipe/images/sandwich.png","Components/Receipe/images/franky.jpg","Components/Receipe/images/burger.jpg","Components/Receipe/images/pasta.jpg","Components/Receipe/images/maggie.png","Components/Receipe/images/momos.jpg","Components/Receipe/images/tea.jpg","Components/Receipe/MenuAPI.js","Components/Receipe/Cart/Cart.js","Components/Receipe/MenuData.js","Components/Receipe/Navbar.js","Components/Receipe/Restaurant.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuAPI","id","category","image","Idli","name","price","dosa","sandwich","franky","burger","pasta","maggie","momos","tea","Cart","MenuData","_ref","menuData","searchText","_useState","useState","_useState2","Object","slicedToArray","cartItem","setcartItem","handleAddtoCart","e","target","value","console","log","react_default","a","createElement","className","filter","item","toLowerCase","includes","map","currEle","key","src","alt","onClick","Navbar","filterItem","navItem","setSearchText","Fragment","currElem","placeholder","onChange","navList","concat","toConsumableArray","Set","Restaurant","setMenuList","_useState3","_useState4","_useState5","_useState6","Receipe_Navbar","updatedList","element","Receipe_MenuData","App","Components_Receipe_Restaurant","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab31da19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Idli.1b49cb15.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dosa.7bc7b0c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sandwich.1fdd6455.png\";","module.exports = __webpack_public_path__ + \"static/media/franky.cba7b27c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/burger.5d41ae41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pasta.359aa574.jpg\";","module.exports = __webpack_public_path__ + \"static/media/maggie.306d3ea3.png\";","module.exports = __webpack_public_path__ + \"static/media/momos.2fc12e8e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tea.9199331c.jpg\";","import Idli from './images/Idli.jpg';\r\nimport dosa from './images/dosa.jpg';\r\nimport sandwich from './images/sandwich.png';\r\nimport franky from './images/franky.jpg';\r\nimport burger from './images/burger.jpg' ;\r\nimport pasta from './images/pasta.jpg' ;\r\nimport maggie from './images/maggie.png' ;\r\nimport momos from './images/momos.jpg' ;\r\nimport tea from './images/tea.jpg' ;\r\n\r\nconst MenuAPI = [\r\n    {\r\n      id: 1,\r\n      category: 'Breakfast',\r\n      image: Idli,\r\n      name: \"Idli\",\r\n      price: \"5$\"\r\n    },\r\n    {\r\n        id: 2,\r\n        category: 'Breakfast',\r\n        image: dosa,\r\n        name: \"Dosa\",\r\n        price: \"8$\"\r\n    },\r\n    {\r\n        id: 3,\r\n        category: 'Lunch',\r\n        image: sandwich,\r\n        name: \"Sandwich\",\r\n        price: \"10$\"\r\n    },\r\n    {\r\n        id: 4,\r\n        category: 'Lunch',\r\n        image: franky,\r\n        name: \"Franky\",\r\n        price: \"4$\"\r\n    },\r\n    {\r\n        id: 5,\r\n        category: 'Dinner',\r\n        image: burger,\r\n        name: \"Burger\",\r\n        price: \"10$\"\r\n    },\r\n    {\r\n        id: 6,\r\n        category: 'Dinner',\r\n        image: pasta,\r\n        name: \"Pasta\",\r\n        price: \"8$\"\r\n    },\r\n    {\r\n        id: 7,\r\n        category: 'Breakfast',\r\n        image: maggie,\r\n        name: \"Maggie\",\r\n        price: \"5$\"\r\n    },\r\n    {\r\n        id: 8,\r\n        category: 'Breakfast',\r\n        image: momos,\r\n        name: \"Momos\",\r\n        price: \"4$\"\r\n    },\r\n    {\r\n        id: 9,\r\n        category: 'Breakfast',\r\n        image: tea,\r\n        name: \"Tea\",\r\n        price: \"2$\"\r\n    }\r\n]\r\n\r\nexport default MenuAPI;\r\n","import React from 'react';\r\nimport './Cart.css';\r\n//import cartItemCounter from './cartItemCounter';\r\n// <cartItemCounter />\r\nfunction Cart() {\r\n  return (\r\n      <div className=\"cartBody\">\r\n      <div className=\"Cart-Container\">\r\n      <div className=\"Header\">\r\n        <h3 className=\"Heading\">Shopping Cart</h3>\r\n        <h5 className=\"Action\">Remove all</h5>\r\n        </div>\r\n        <div className=\"Cart-Items\">\r\n            <div className=\"image-box\">\r\n                <img src=\"\" alt=\"image\" style={{ height: \"120px\" }} />\r\n            </div>\r\n            <div className=\"about\">\r\n                <h1 className=\"title\">Apple Juice</h1>\r\n                <h3 className=\"subtitle\">250ml</h3>\r\n                <img src=\"\" alt=\"image\" style={{ height:\"30px\" }}/>\r\n            </div>\r\n            <div className=\"counter\"></div>\r\n            <div className=\"prices\"></div>\r\n           \r\n            </div>\r\n\r\n            \r\n      </div>\r\n      \r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Cart;","import React, {useState} from 'react';\r\nimport Cart from './Cart/Cart';\r\n\r\n const MenuData = ({menuData, searchText}) => {\r\n\r\n\r\n  const[cartItem, setcartItem] = useState([]);\r\n\r\n\r\n  const handleAddtoCart = (e) => {\r\n    setcartItem({\r\n      cartItem: e.target.value\r\n      })\r\n  }\r\n\r\n  console.log(searchText)\r\n\r\n  return (\r\n            <div className=\"contentWrapper\">\r\n\r\n                  {\r\n                      menuData.filter((item)=>{\r\n                        if(searchText){\r\n                          if(item.name.toLowerCase().includes(searchText.toLowerCase()) || item.category.toLowerCase().includes(searchText.toLowerCase())){\r\n                            return true\r\n                          }\r\n                        }else{\r\n                          return true\r\n                        }\r\n                      }).map((currEle) => {\r\n                        const {id, name, image, price} = currEle;\r\n                      \r\n                      return(\r\n                      \r\n                        <div className='background' key={id} >\r\n                          <div className='menuItem'>\r\n                            <h3 className=\"name\">{name}</h3>\r\n                            <img src={image} alt=\"images\" className='image' />\r\n                            <h3 className=\"price\">Price - {price}</h3>\r\n                            <button className='cartBtn' value={cartItem} onClick={handleAddtoCart}>Add to cart</button>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                      )\r\n                      }\r\n                      )\r\n                  }\r\n            </div>\r\n  )\r\n}\r\n\r\nexport default MenuData;\r\n\r\n//<img src={currEle.image} alt=\"images\" className='image' />\r\n//<h4 className=\"number\">{currEle.id}</h4>\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Cart/Cart.css';\r\nimport MenuAPI from './MenuAPI';\r\nimport MenuData from './MenuData';\r\n\r\nconst Navbar = ({filterItem, navItem, setSearchText}) => {\r\n\r\n    function handleSearch(e){\r\n        setSearchText(e.target.value)\r\n    \r\n    } \r\n\r\n return (\r\n  <> \r\n        <nav className='navbar'>\r\n            {navItem.map((currElem) => {\r\n                return(\r\n                    <button \r\n                        className='navBtn' \r\n                        onClick={() => filterItem(currElem)}>\r\n                        <span>{currElem}</span>\r\n                    </button>\r\n                    \r\n                )\r\n               })\r\n            }\r\n            <input className=\"search\" placeholder='Search your receipe here...' onChange={handleSearch}/>\r\n            <i className='fas fa-cart-arrow-down cartIcon'></i>\r\n        </nav>\r\n        \r\n        </>\r\n        ) \r\n    }\r\n\r\nexport default Navbar;\r\n","import React, {useState} from 'react';\r\nimport './Restaurant.css';\r\nimport MenuAPI from './MenuAPI';\r\nimport MenuData from './MenuData';\r\nimport Navbar from './Navbar';\r\n\r\nconst navList = [\r\n    ...new Set(MenuAPI.map((currEle) => {\r\nreturn currEle.category;\r\n})),'All'\r\n]\r\n\r\nconsole.log(navList);\r\n\r\nconst Restaurant = () => {\r\n    const [menuData, setMenuList] = useState(MenuAPI)\r\n    const [navItem, setnavItem] = useState(navList)\r\n    const [searchText, setSearchText] = useState('')\r\n\r\n    const filterItem = (category) => {\r\n\r\n        if(category === 'All'){\r\n            setMenuList(MenuAPI)\r\n            return;\r\n        }\r\n        const updatedList = MenuAPI.filter((element) => {\r\n            return element.category === category\r\n        })\r\n\r\n        setMenuList(updatedList);\r\n    }\r\n\r\n\r\n  return (\r\n            <div className='back'>\r\n                <Navbar filterItem = {filterItem} navItem ={navItem} setSearchText={setSearchText}/>\r\n                <MenuData menuData = {menuData} searchText={searchText}/>\r\n            </div>\r\n  )\r\n};\r\n\r\nexport default Restaurant;\r\n\r\n\r\n","import React from 'react';\nimport Restaurant from './Components/Receipe/Restaurant';\n//import Cart from './Components/Receipe/Cart/Cart';\n//<Cart />\n\nfunction App() {\n  return (\n    <div>\n      <Restaurant />\n     \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n//\n//import Cart from './Components/Cart';\n//import Learn from './css-pract/Learn';\n//import Input from './Components/ToDoList/Input';\n//import Calculator from './Components/Calculator/Calculator';\n//<Cart />\n//<Learn />\n//<Input />\n//<Calculator />\n//import Bulb from './Components/Bulb/Bulb';\n// <Bulb />\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}